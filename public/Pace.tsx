/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 pace.gltf -t 
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cube040: THREE.Mesh
    Cube040_1: THREE.Mesh
    Cube040_2: THREE.Mesh
    Cube040_3: THREE.Mesh
    Plane003: THREE.Mesh
    Plane003_1: THREE.Mesh
    Cube006: THREE.Mesh
    Cube030: THREE.Mesh
    Cube030_1: THREE.Mesh
    Cube035: THREE.Mesh
    Cube038: THREE.Mesh
    Cube040_4: THREE.Mesh
    Cube042: THREE.Mesh
    Cube046: THREE.Mesh
    Cube051: THREE.Mesh
    Cube052: THREE.Mesh
    Cube053: THREE.Mesh
    Cube054: THREE.Mesh
    Cube055: THREE.Mesh
    Cylinder007: THREE.Mesh
    Cylinder010: THREE.Mesh
    Cylinder011: THREE.Mesh
    Cylinder012: THREE.Mesh
    Cylinder015: THREE.Mesh
    Cylinder016: THREE.Mesh
    Cylinder019: THREE.Mesh
    Cylinder020: THREE.Mesh
    Cylinder021: THREE.Mesh
    Cylinder022: THREE.Mesh
    Cylinder023: THREE.Mesh
    Cylinder024: THREE.Mesh
    Cylinder025: THREE.Mesh
    Cylinder026: THREE.Mesh
    Cylinder027: THREE.Mesh
    Cylinder028: THREE.Mesh
    Cylinder029: THREE.Mesh
    Cylinder030: THREE.Mesh
    Cylinder053: THREE.Mesh
    Cylinder053_1: THREE.Mesh
    Cylinder055: THREE.Mesh
    Cylinder055_1: THREE.Mesh
    Cylinder034: THREE.Mesh
    Plane: THREE.Mesh
  }
  materials: {
    foil_silver: THREE.MeshStandardMaterial
    aluminum: THREE.MeshStandardMaterial
    Material: THREE.MeshStandardMaterial
    ['mirror chrome']: THREE.MeshStandardMaterial
    brass: THREE.MeshStandardMaterial
    ['plastic black']: THREE.MeshStandardMaterial
    ['mirror chrome']: THREE.MeshStandardMaterial
    ['plasic white']: THREE.MeshStandardMaterial
    ['plasic white']: THREE.MeshStandardMaterial
    ['plasic white']: THREE.MeshStandardMaterial
    spring: THREE.MeshStandardMaterial
    pace: THREE.MeshStandardMaterial
    ['plastic black']: THREE.MeshStandardMaterial
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/pace.gltf') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Cube040.geometry} material={materials.foil_silver} />
      <mesh geometry={nodes.Cube040_1.geometry} material={materials.aluminum} />
      <mesh geometry={nodes.Cube040_2.geometry} material={materials.Material} />
      <mesh geometry={nodes.Cube040_3.geometry} material={materials['mirror chrome']} />
      <group position={[1.527, 0.115, 3.831]}>
        <mesh geometry={nodes.Plane003.geometry} material={materials.brass} />
        <mesh geometry={nodes.Plane003_1.geometry} material={materials.pace} />
      </group>
      <mesh geometry={nodes.Cube006.geometry} material={materials.aluminum} position={[0.256, 0.856, 0.594]} />
      <group position={[1.915, 0.194, -0.696]}>
        <mesh geometry={nodes.Cube030.geometry} material={materials['plastic black']} />
        <mesh geometry={nodes.Cube030_1.geometry} material={materials['mirror chrome']} />
      </group>
      <mesh geometry={nodes.Cube035.geometry} material={materials['plasic white']} position={[-0.522, -0.914, -0.102]} />
      <mesh geometry={nodes.Cube038.geometry} material={materials['plasic white']} position={[-0.353, 0.777, -0.118]} />
      <mesh geometry={nodes.Cube040_4.geometry} material={materials['plasic white']} position={[0.726, -0.13, -1.069]} />
      <mesh geometry={nodes.Cube042.geometry} material={materials.aluminum} position={[0.379, 0.824, -0.672]} />
      <mesh geometry={nodes.Cube046.geometry} material={materials['plasic white']} position={[-0.46, -1.106, 0.257]} />
      <mesh geometry={nodes.Cube051.geometry} material={materials.aluminum} position={[0.257, 0.835, 0.739]} />
      <mesh geometry={nodes.Cube052.geometry} material={materials.aluminum} position={[0.181, 0.95, 0.727]} />
      <mesh geometry={nodes.Cube053.geometry} material={materials.aluminum} position={[0.333, 0.95, 0.727]} />
      <mesh geometry={nodes.Cube054.geometry} material={materials.aluminum} position={[0.156, 0.836, 0.711]} />
      <mesh geometry={nodes.Cube055.geometry} material={materials.aluminum} position={[0.358, 0.815, 0.711]} />
      <mesh geometry={nodes.Cylinder007.geometry} material={materials.aluminum} position={[0.722, 0.893, -0.486]} />
      <mesh geometry={nodes.Cylinder010.geometry} material={materials['plasic white']} position={[0.043, -0.541, -0.988]} />
      <mesh geometry={nodes.Cylinder011.geometry} material={materials.aluminum} position={[-0.569, -1.04, -0.352]} />
      <mesh geometry={nodes.Cylinder012.geometry} material={materials.aluminum} position={[0.181, 1.05, 0.027]} />
      <mesh geometry={nodes.Cylinder015.geometry} material={materials.aluminum} position={[0, -0.017, -0.004]} />
      <mesh geometry={nodes.Cylinder016.geometry} material={materials.aluminum} position={[-0.899, -0.023, -0.051]} />
      <mesh geometry={nodes.Cylinder019.geometry} material={materials.aluminum} position={[0.257, 0.835, 0.572]} />
      <mesh geometry={nodes.Cylinder020.geometry} material={materials.aluminum} position={[-0.904, 0.462, -0.974]} />
      <mesh geometry={nodes.Cylinder021.geometry} material={materials.aluminum} position={[0.156, 0.835, 0.779]} />
      <mesh geometry={nodes.Cylinder022.geometry} material={materials.aluminum} position={[0.156, 0.835, 0.779]} />
      <mesh geometry={nodes.Cylinder023.geometry} material={materials.aluminum} position={[0.358, 0.835, 0.779]} />
      <mesh geometry={nodes.Cylinder024.geometry} material={materials.aluminum} position={[0.451, 0.835, 0.779]} />
      <mesh geometry={nodes.Cylinder025.geometry} material={materials.aluminum} position={[0.451, 0.835, 0.779]} />
      <mesh geometry={nodes.Cylinder026.geometry} material={materials.aluminum} position={[-0.501, 0.808, 0.888]} />
      <mesh geometry={nodes.Cylinder027.geometry} material={materials.aluminum} position={[0.738, 0.808, 0.888]} />
      <mesh geometry={nodes.Cylinder028.geometry} material={materials.aluminum} position={[-0.431, 0.808, 0.888]} />
      <mesh geometry={nodes.Cylinder029.geometry} material={materials.aluminum} position={[-0.431, 0.808, 0.888]} />
      <mesh geometry={nodes.Cylinder030.geometry} material={materials.aluminum} position={[-0.326, 0.808, 0.888]} />
      <group position={[-0.431, 0.497, 2.36]}>
        <mesh geometry={nodes.Cylinder053.geometry} material={materials.aluminum} />
        <mesh geometry={nodes.Cylinder053_1.geometry} material={materials.spring} />
      </group>
      <group position={[-0.597, 0.074, 3.787]}>
        <mesh geometry={nodes.Cylinder055.geometry} material={materials.aluminum} />
        <mesh geometry={nodes.Cylinder055_1.geometry} material={materials.spring} />
      </group>
      <mesh geometry={nodes.Cylinder034.geometry} material={materials.pace} position={[-0.853, -0.022, -0.113]} />
      <mesh geometry={nodes.Plane.geometry} material={materials['plastic black']} position={[0.726, -0.746, -0.978]} />
    </group>
  )
}

useGLTF.preload('/pace.gltf')
